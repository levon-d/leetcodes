/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        int i = 0;
        int j = 0; 
        ListNode currentNode = head;

        while (currentNode.next != null) {
            j++;
            currentNode = currentNode.next;
        }

        if (j == 0 && n == 1) { 
            return null;
        }

        if (j-n == -1) { 
            return head.next;
        }

        currentNode = head;

        while (i < j-n) { 
            currentNode = currentNode.next;
            i++;
        }
        
        ListNode before = currentNode; 
        ListNode after = null;
        if (currentNode.next != null) { 
            after = currentNode.next.next;
        }
        before.next = after;
        return head;
    }
}
